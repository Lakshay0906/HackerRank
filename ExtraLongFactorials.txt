'use strict';

process.stdin.resume();
process.stdin.setEncoding('utf-8');

let inputString = '';
let currentLine = 0;

process.stdin.on('data', inputStdin => {
    inputString += inputStdin;
});

process.stdin.on('end', _ => {
    inputString = inputString.replace(/\s*$/, '')
        .split('\n')
        .map(str => str.replace(/\s*$/, ''));

    main();
});

function readLine() {
    return inputString[currentLine++];
}

function extraLongFactorials(n) {
    let memoization = [BigInt(0), BigInt(1)];

    const factorial = num => (typeof memoization[num] !== 'number')
    ? ((num - BigInt(1)) > 0
    ? (num * factorial(num - BigInt(1)))
    : BigInt(1)
    )
    : memoization[num]
    
    console.log(String(factorial(BigInt(n))));

}

function main() {
    const n = parseInt(readLine(), 10);

    extraLongFactorials(n);
}
